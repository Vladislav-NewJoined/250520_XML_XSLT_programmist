Проект: Тестовое задание для вакансии: XML / XSLT‑программист
https://saransk.hh.ru/vacancy/120604409?hhtmFrom=chat

Автор: Созин Владислав
Контакты:
Telegram: https://t.me/tess_SV
Email: sozin.vladislav@mail.ru

Содержание проекта
В проекте реализованы решения тестового задания по JavaScript и XSLT 1.0:

Папка js/ — решения на JavaScript (файл test.js)

Папка xslt/ — решения на XSLT и тестовые данные

---

## Описание XSLT-заданий и участвующих файлов

### 1. Groups.xml → List.xml

**Задание:**  
Написать xslt-преобразование, которое на основе входящего файла Groups.xml построит файл List.xml (смотри приложенные файлы).

**Участвующие файлы:**
- `xslt/Groups.xml` — исходный XML (группы)
- `xslt/List.xml` — эталонный результат (линейный список)
- `xslt/groups_to_list.xslt` — XSLT-преобразование (Groups → List)
- `xslt/List_NewCreated.xml` — результат работы XSLT (создаётся программой)

---

### 2. List.xml → Groups.xml

**Задание:**  
Написать xslt-преобразование, которое на основе входящего файла List.xml построит файл Groups.xml (смотри приложенные файлы).

**Участвующие файлы:**
- `xslt/List.xml` — исходный XML (линейный список)
- `xslt/Groups.xml` — эталонный результат (группы)
- `xslt/list_to_groups.xslt` — XSLT-преобразование (List → Groups)
- `xslt/Groups_NewCreated.xml` — результат работы XSLT (создаётся программой)

---

### 3. Tree.xml → Flat.txt

**Задание:**  
Написать xslt-преобразование, которое на основе входящего файла Tree.xml построит файл Flat.txt — пути всех элементов в плоском виде через слэш (смотри приложенные файлы).

**Участвующие файлы:**
- `xslt/Tree.xml` — исходный XML (дерево)
- `xslt/Flat.txt` — эталонный результат (плоский список путей)
- `xslt/tree_to_flat.xslt` — XSLT-преобразование (Tree → Flat)
- `xslt/Flat_NewCreated.txt` — результат работы XSLT (создаётся программой)

---

### 4. Шаблон числовой строки

**Задание:**  
Написать именованный xslt-шаблон, который принимает целое неотрицательное число M, а на выходе возвращает строку из чисел от 0 до M через пробел.

**Участвующие файлы:**
- `xslt/numbers_template.xslt` — XSLT-шаблон для генерации числовой строки
- (пример входных/выходных данных можно посмотреть внутри файла)

---

## Краткое описание файлов

- `Groups.xml` — описание групп и их элементов
- `List.xml` — линейный список элементов с указанием группы
- `Tree.xml` — древовидная структура
- `Flat.txt` — плоский список путей из дерева (эталон)
- `groups_to_list.xslt` — XSLT для Groups.xml → List.xml
- `list_to_groups.xslt` — XSLT для List.xml → Groups.xml
- `tree_to_flat.xslt` — XSLT для Tree.xml → Flat.txt
- `numbers_template.xslt` — XSLT-шаблон для вывода чисел от 0 до M
- `*_NewCreated.*` — файлы, создаваемые программой при запуске XSLT-преобразования

---

## Как проверить решения

1. **Проверка JavaScript**
   - Файл: `js/test.js`
   - Откройте файл в редакторе или скопируйте его содержимое.
   - Запустите в Node.js или браузере (F12 → Console → вставить код).
   - Встроенные проверки через `console.assert`.

2. **Проверка XSLT-преобразований**
   - **Вариант А:** Онлайн-сервис (если работает) — https://www.utilities-online.info/xsltransformation
   - **Вариант Б:** XML Notepad 2007 (Windows)
   - **Вариант В:** Saxon-HE (универсально, через Java)
     - Скачайте Saxon-HE JAR.
     - Откройте командную строку в папке с файлами.
     - Выполните команду, например:
       ```
       java -jar Saxon-HE-10.9.jar -s:Tree.xml -xsl:tree_to_flat.xslt -o:Flat_NewCreated.txt
       ```
     - Проверьте, что результат совпадает с эталонным файлом.

---

## Вопросы и поддержка

Если у вас возникнут вопросы по запуску, проверке или доработке решений — пишите мне в Telegram или на почту, я оперативно помогу.

---

**Примечания:**
- Все XSLT-файлы написаны для версии 1.0.
- JS-код совместим с современными браузерами и Node.js.
- Если онлайн-сервисы временно недоступны, используйте локальные программы (XML Notepad, Saxon-HE).

---

С уважением,  
Созин Владислав  
+7 909 328-59-88 (WhatsApp)  
https://t.me/tess_SV (Telegram)  
sozin.vladislav@mail.ru
